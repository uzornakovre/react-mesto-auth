{"ast":null,"code":"var _jsxFileName = \"/Users/uzornakovre/Desktop/WEBDEV/\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435/\\u042F\\u043D\\u0434\\u0435\\u043A\\u0441 \\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C/Practice/dev/mesto-react/src/components/EditAvatarPopup.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport urlValidation from '../utils/urlValidation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditAvatarPopup(props) {\n  _s();\n  const avatarRef = React.useRef();\n  const [avatarLink, setAvatarLink] = React.useState('');\n  const [avInputInit, setAvInputInit] = React.useState(false);\n  const [avatarError, setAvatarError] = React.useState('');\n  const [isValid, setIsValid] = React.useState(false);\n  const [submitText, setSubmitText] = React.useState('Сохранить');\n  React.useEffect(() => {\n    if (props.isLoading) {\n      setSubmitText('Сохранение...');\n    } else {\n      setSubmitText('Сохранить');\n    }\n  }, [props.isLoading]);\n  React.useEffect(() => {\n    if (avatarRef.current.value.length === 0) {\n      setAvatarError('Заполните это поле');\n      setIsValid(false);\n    } else if (urlValidation(avatarRef.current.value)) {\n      setAvatarError('Введите URL');\n      setIsValid(false);\n    } else {\n      setAvatarError('');\n      setIsValid(true);\n    }\n  }, [avatarLink]);\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    props.onUpdateAvatar({\n      avatar: avatarRef.current.value\n    });\n    avatarRef.current.value = '';\n  }\n  function handleChangeAvatar(evt) {\n    setAvatarLink(evt.target.value);\n    setAvInputInit(true);\n  }\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: 'avatar',\n    title: 'Обновить аватар',\n    submitText: submitText,\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    isValid: isValid,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"url\",\n      className: `popup__form-input popup__form-input_content_avatar ${avInputInit && !isValid && 'popup__form-input_error'}`,\n      id: \"avatar\",\n      name: \"avatar-url\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n      value: avatarLink || '',\n      ref: avatarRef,\n      onChange: handleChangeAvatar,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__form-input-error popup__form-input-error_content_avatar\",\n      children: avInputInit && `${avatarError}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(EditAvatarPopup, \"Pbi3YCHgvsWAzK277jJtDG/lwc4=\");\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\nvar _c;\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"names":["React","PopupWithForm","urlValidation","EditAvatarPopup","props","avatarRef","useRef","avatarLink","setAvatarLink","useState","avInputInit","setAvInputInit","avatarError","setAvatarError","isValid","setIsValid","submitText","setSubmitText","useEffect","isLoading","current","value","length","handleSubmit","evt","preventDefault","onUpdateAvatar","avatar","handleChangeAvatar","target","isOpen","onClose"],"sources":["/Users/uzornakovre/Desktop/WEBDEV/Обучение/Яндекс Практикум/Practice/dev/mesto-react/src/components/EditAvatarPopup.js"],"sourcesContent":["import React         from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport urlValidation from '../utils/urlValidation';\n\nfunction EditAvatarPopup(props) {\n\n  const avatarRef                     = React.useRef();\n  const [avatarLink,  setAvatarLink ] = React.useState('');\n  const [avInputInit, setAvInputInit] = React.useState(false);\n  const [avatarError, setAvatarError] = React.useState('');\n  const [isValid,     setIsValid    ] = React.useState(false);\n  const [submitText,  setSubmitText ] = React.useState('Сохранить');\n\n  React.useEffect(() => {\n    if (props.isLoading) {\n      setSubmitText('Сохранение...');\n    } else {\n      setSubmitText('Сохранить');\n    }\n  }, [props.isLoading]);\n\n  React.useEffect(() => {\n    if (avatarRef.current.value.length === 0) { \n      setAvatarError('Заполните это поле');\n      setIsValid(false);\n    } else if (urlValidation(avatarRef.current.value)) {\n      setAvatarError('Введите URL');\n      setIsValid(false);\n    } else {\n      setAvatarError('');\n      setIsValid(true);\n    }\n  }, [avatarLink]);\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n\n    props.onUpdateAvatar({\n      avatar: avatarRef.current.value\n    })\n\n    avatarRef.current.value = '';\n  }\n\n  function handleChangeAvatar(evt) {\n    setAvatarLink(evt.target.value);\n    setAvInputInit(true);\n  }\n\n  return (\n    <PopupWithForm \n      name={'avatar'}\n      title={'Обновить аватар'}\n      submitText={submitText}\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      isValid={isValid}\n    >\n      <input type=\"url\"\n            className={`popup__form-input popup__form-input_content_avatar ${avInputInit && !isValid && 'popup__form-input_error'}`}\n            id=\"avatar\"\n            name=\"avatar-url\"\n            placeholder=\"Ссылка на аватар\"\n            value={avatarLink || ''}\n            ref={avatarRef}\n            onChange={handleChangeAvatar}\n            required\n      />\n      <span className=\"popup__form-input-error popup__form-input-error_content_avatar\">\n        {avInputInit && `${avatarError}`}  \n      </span>  \n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}