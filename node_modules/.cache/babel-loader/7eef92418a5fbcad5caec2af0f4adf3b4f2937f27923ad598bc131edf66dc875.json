{"ast":null,"code":"var _jsxFileName = \"/Users/uzornakovre/Desktop/WEBDEV/\\u041E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435/\\u042F\\u043D\\u0434\\u0435\\u043A\\u0441 \\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C/Practice/dev/mesto-react/src/components/EditAvatarPopup.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditAvatarPopup(props) {\n  _s();\n  const avatarRef = React.useRef();\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateAvatar({\n      avatar: avatarRef.value\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: 'avatar',\n    title: 'Обновить аватар',\n    submitText: 'Сохранить',\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"url\",\n      className: \"popup__form-input popup__form-input_content_avatar\",\n      id: \"avatar\",\n      name: \"avatar-url\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n      defaultValue: \"\",\n      ref: avatarRef,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__form-input-error popup__form-input-error_content_avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(EditAvatarPopup, \"b0gZHFb7yLAqG8iuppUU+uG535s=\");\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\nvar _c;\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"names":["React","PopupWithForm","EditAvatarPopup","props","avatarRef","useRef","handleSubmit","evt","preventDefault","onUpdateAvatar","avatar","value","isOpen","onClose"],"sources":["/Users/uzornakovre/Desktop/WEBDEV/Обучение/Яндекс Практикум/Practice/dev/mesto-react/src/components/EditAvatarPopup.js"],"sourcesContent":["import React         from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n  const avatarRef = React.useRef();\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n\n    onUpdateAvatar({\n      avatar: avatarRef.value\n    })\n  }\n\n  return (\n    <PopupWithForm \n        name={'avatar'}\n        title={'Обновить аватар'}\n        submitText={'Сохранить'}\n        isOpen={props.isOpen}\n        onClose={props.onClose}\n        onSubmit={handleSubmit}\n      >\n        <input type=\"url\"\n              className=\"popup__form-input popup__form-input_content_avatar\"\n              id=\"avatar\"\n              name=\"avatar-url\"\n              placeholder=\"Ссылка на аватар\"\n              defaultValue=\"\"\n              ref={avatarRef}\n              required\n        />\n        <span className=\"popup__form-input-error popup__form-input-error_content_avatar\"></span>  \n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;"],"mappings":";;AAAA,OAAOA,KAAK,MAAc,OAAO;AACjC,OAAOC,aAAa,MAAM,iBAAiB;AAAC;AAE5C,SAASC,eAAe,CAACC,KAAK,EAAE;EAAA;EAC9B,MAAMC,SAAS,GAAGJ,KAAK,CAACK,MAAM,EAAE;EAEhC,SAASC,YAAY,CAACC,GAAG,EAAE;IACzBA,GAAG,CAACC,cAAc,EAAE;IAEpBC,cAAc,CAAC;MACbC,MAAM,EAAEN,SAAS,CAACO;IACpB,CAAC,CAAC;EACJ;EAEA,oBACE,QAAC,aAAa;IACV,IAAI,EAAE,QAAS;IACf,KAAK,EAAE,iBAAkB;IACzB,UAAU,EAAE,WAAY;IACxB,MAAM,EAAER,KAAK,CAACS,MAAO;IACrB,OAAO,EAAET,KAAK,CAACU,OAAQ;IACvB,QAAQ,EAAEP,YAAa;IAAA,wBAEvB;MAAO,IAAI,EAAC,KAAK;MACX,SAAS,EAAC,oDAAoD;MAC9D,EAAE,EAAC,QAAQ;MACX,IAAI,EAAC,YAAY;MACjB,WAAW,EAAC,wFAAkB;MAC9B,YAAY,EAAC,EAAE;MACf,GAAG,EAAEF,SAAU;MACf,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACZ,eACF;MAAM,SAAS,EAAC;IAAgE;MAAA;MAAA;MAAA;IAAA,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QAC5E;AAEpB;AAAC,GAhCQF,eAAe;AAAA,KAAfA,eAAe;AAkCxB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}